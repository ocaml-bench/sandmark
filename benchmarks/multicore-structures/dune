(executables
    (names test_spsc_queue_sequential)
    (modules test_spsc_queue_sequential)
    (libraries spsc_queue unix))

(executables
    (names test_spsc_queue_parallel)
    (modules test_spsc_queue_parallel)
    (libraries spsc_queue unix))

(executables
    (names test_spsc_queue_pingpong)
    (modules test_spsc_queue_pingpong)
    (libraries spsc_queue unix))

(executables
    (names test_queue_parallel)
    (modules test_queue_parallel)
    (libraries ms_queue unix))

(executables
    (names test_queue_sequential)
    (modules test_queue_sequential)
    (libraries ms_queue unix))

(library
    (name spsc_queue)
    (modules spsc_queue))

(library 
    (name ms_queue)
    (modules ms_queue))

(library 
    (name treiber_stack)
    (modules treiber_stack))

(executables
    (names test_stack_parallel)
    (modules test_stack_parallel)
    (libraries treiber_stack unix))

(executables
    (names test_stack_sequential)
    (modules test_stack_sequential)
    (libraries treiber_stack unix))

(rule
 (targets test_stack_sequential.bench)
 (deps (:prog test_stack_sequential.exe))
 (action (run orun -o %{targets} -- %{prog} 100000)))

(rule
 (targets test_queue_sequential.bench)
 (deps (:prog test_queue_sequential.exe))
 (action (run orun -o %{targets} -- %{prog} 100000)))

(rule
 (targets test_stack_parallel.bench)
 (deps (:prog test_stack_parallel.exe))
 (action (run orun -o %{targets} -- %{prog} 100000)))

(rule
 (targets test_queue_parallel.bench)
 (deps (:prog test_queue_parallel.exe))
 (action (run orun -o %{targets} -- %{prog} 100000)))

(rule
 (targets test_spsc_queue_sequential.bench)
 (deps (:prog test_spsc_queue_sequential.exe))
 (action (run orun -o %{targets} -- %{prog} 100000)))

 (rule
 (targets test_spsc_queue_parallel.bench)
 (deps (:prog test_spsc_queue_parallel.exe))
 (action (run orun -o %{targets} -- %{prog} 50000000)))

 (rule
 (targets test_spsc_queue_pingpong.bench)
 (deps (:prog test_spsc_queue_pingpong.exe))
 (action (run orun -o %{targets} -- %{prog} 4 10000)))

(alias (name multibench) (deps test_stack_sequential.bench test_stack_parallel.bench test_queue_sequential.bench test_queue_parallel.bench test_spsc_queue_sequential.bench test_spsc_queue_parallel.bench test_spsc_queue_pingpong.bench))

(include dune.inc)
