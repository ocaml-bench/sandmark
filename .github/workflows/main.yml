on:
  # Triggers the workflow on push or pull request events but only for the main branch on PR
  push:
    branches: '**'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.13.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install . --deps-only --with-test

      # Runs a set of commands using the runners shell
      - name: 5.0.0+stable
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo gnuplot-x11 libgmp-dev
          pip3 install intervaltree
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make run_config_filtered.json
          sed -i 's/--cpu-list 5/--cpu-list 1/g' run_config_filtered.json
          OPT_WAIT=0 USE_SYS_DUNE_HACK=1 RUN_CONFIG_JSON=run_config_filtered.json make ocaml-versions/5.0.0+stable.bench
          ls _results
          cat _results/*  
          
      - name: 5.0.0+stable+parallel
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo gnuplot-x11 libgmp-dev
          pip3 install intervaltree
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make multicore_parallel_run_config_filtered.json
          sed -i 's/--cpu-list 5/--cpu-list 1/g' multicore_parallel_run_config_filtered.json
          TAG='"macro_bench"' make multicore_parallel_run_config_filtered_filtered.json
          make multicore_parallel_run_config_filtered_filtered_2domains.json
          OPT_WAIT=0 USE_SYS_DUNE_HACK=1 BUILD_BENCH_TARGET=multibench_parallel RUN_CONFIG_JSON=multicore_parallel_run_config_filtered_filtered_2domains.json make ocaml-versions/5.0.0+stable.bench
          ls _results
          cat _results/*
            
      - name: 5.0.0+trunk+serial
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo gnuplot-x11 libgmp-dev
          pip3 install intervaltree
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make run_config_filtered.json
          sed -i 's/--cpu-list 5/--cpu-list 1/g' run_config_filtered.json
          OPT_WAIT=0 USE_SYS_DUNE_HACK=1 RUN_CONFIG_JSON=run_config_filtered.json make ocaml-versions/5.0.0+trunk.bench  
          ls _results
          cat _results/*
          
      - name: 5.0.0+trunk+parallel
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip autoconf jo gnuplot-x11 libgmp-dev
          pip3 install intervaltree
          eval $(opam env)
          opam update
          opam install dune.2.9.0
          eval $(opam env)
          export ITER=1
          export OPAM_DISABLE_SANDBOXING=true
          TAG='"run_in_ci"' make multicore_parallel_run_config_filtered.json
          TAG='"macro_bench"' make multicore_parallel_run_config_filtered_filtered.json
          sed -i 's/--cpu-list 5/--cpu-list 1/g' multicore_parallel_run_config_filtered.json
          sed -i 's/--cpu-list 5/--cpu-list 1/g' multicore_parallel_run_config_filtered_filtered.json
          make multicore_parallel_run_config_filtered_filtered_2domains.json
          OPT_WAIT=0 USE_SYS_DUNE_HACK=1 BUILD_BENCH_TARGET=multibench_parallel RUN_CONFIG_JSON=multicore_parallel_run_config_filtered_filtered_2domains.json make ocaml-versions/5.0.0+trunk.bench
          ls _results
          cat _results/*
          
      - name: test_notebooks
        run: |
          sudo apt-get update && sudo apt-get -y install wget pkg-config libgmp-dev m4 libdw-dev jq python3-pip jo gnuplot-x11 libgmp-dev
          python3 -m pip install markupsafe==2.0.1
          export PATH=$PATH:/home/opam/.local/bin
          pip3 install jupyter nbconvert seaborn pandas
          cd notebooks/sequential
          sudo chmod 777 .
          jupyter nbconvert --to html --execute sequential.ipynb
          cd ../parallel
          sudo chmod 777 .
          jupyter nbconvert --to html --execute parallel.ipynb
